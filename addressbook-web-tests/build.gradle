apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    compile 'org.testng:testng:7.4.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.0.0-beta-3'
    implementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.beust:jcommander:1.81'
    implementation 'com.thoughtworks.xstream:xstream:1.4.17'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.tersesystems.logback:logback-classic:0.16.2'
    implementation 'mysql:mysql-connector-java:8.0.25'
    implementation 'org.hibernate:hibernate-tools-maven-plugin:5.4.31.Final'
    agent "org.aspectj:aspectjweaver:1.8.0"
    implementation "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    implementation 'org.robotframework:robotframework:4.0.3'
    implementation 'io.spring.ge.conventions:gradle-enterprise-conventions-gradle-plugin:0.0.7'
    implementation 'info.cukes:cucumber-java:1.2.6'
    implementation 'info.cukes:cucumber-testng:1.2.6'
}

task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty('browser', "${browser}")
    }
    if (project.hasProperty('target')) {
        systemProperty('target', "${target}")
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty('verifyUI', "${verifyUI}")
    }
}

task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty('browser', "${browser}")
    }
    if (project.hasProperty('target')) {
        systemProperty('target', "${target}")
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty('verifyUI', "${verifyUI}")
    }
}


testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testUsers(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-users.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty('browser', "${browser}")
    }
    if (project.hasProperty('target')) {
        systemProperty('target', "${target}")
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty('verifyUI', "${verifyUI}")
    }


    testUsers.doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }
}

task robotFramework(type: JavaExec){
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/robotFramework-report'
    args 'src/test/resources/robotFramework'
}